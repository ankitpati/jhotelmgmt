/* UserPanel.java */
/* User Component for the Hotel Management System
 *
 * Copyright 2016 Ankit Pati <ankitpati@gmail.com>
 *
 * This  software is  free software;  you can redistribute it and/or  modify  it
 * under the terms of the  GNU Lesser General Public License as published by the
 * Free Software Foundation;  either  version 3  of the  License,  or  (at  your
 * option) any later version.
 *
 * This software is distributed in the hope that it will be useful, but  WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 *
 * You  should  have received a copy of the GNU Lesser  General  Public  License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

package hotelmgmt;

import java.awt.*;
import javax.swing.*;
import java.sql.*;

public class UserPanel extends javax.swing.JPanel {
    final static long serialVersionUID = 0l;
    String username;

    public UserPanel(String username) {
        initComponents();

        this.username = username;
        activityLabel.setText(activityLabel.getText() + username);

        populateHotelNameComboBox();
    }

    private void populateHotelNameComboBox() {
        String hotel;
        ResultSet rs;

        try (
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/hotelmgmt", "hotelmgmt", "hotelmgmt");
            PreparedStatement ps = con.prepareStatement("select hotel from hotels")
        ) {
            rs = ps.executeQuery();
            while (rs.next()) {
                hotel = rs.getString(1);
                bookHotelNameComboBox.addItem(hotel);
                serveHotelNameComboBox.addItem(hotel);
            }
        }
        catch(SQLException e) {
            errorLabel.setText("Database Connection Failed");
            errorLabel.setForeground(Color.ORANGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomTypeButtonGroup = new javax.swing.ButtonGroup();
        headerLabel = new javax.swing.JLabel();
        activityLabel = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();
        cashierTabbedPane = new javax.swing.JTabbedPane();
        bookPane = new javax.swing.JPanel();
        bookGuestNameField = new javax.swing.JTextField();
        roomRadioButton = new javax.swing.JRadioButton();
        suiteRadioButton = new javax.swing.JRadioButton();
        deluxeRadioButton = new javax.swing.JRadioButton();
        cancelBookButton = new javax.swing.JButton();
        unbookButton = new javax.swing.JButton();
        bookButton = new javax.swing.JButton();
        bookHotelNameComboBox = new javax.swing.JComboBox();
        servePane = new javax.swing.JPanel();
        serviceNameField = new javax.swing.JTextField();
        costField = new javax.swing.JTextField();
        cancelServeButton = new javax.swing.JButton();
        recordServeButton = new javax.swing.JButton();
        serveHotelNameComboBox = new javax.swing.JComboBox();
        serveGuestNameField = new javax.swing.JTextField();
        billPane = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();

        headerLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 36)); // NOI18N
        headerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLabel.setText("Hotel Management System");

        activityLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 30)); // NOI18N
        activityLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        activityLabel.setText("User: ");

        errorLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        bookGuestNameField.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        bookGuestNameField.setForeground(java.awt.Color.gray);
        bookGuestNameField.setText("Guest Name");
        bookGuestNameField.setToolTipText("Guest Name");
        bookGuestNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bookGuestNameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bookGuestNameFieldFocusLost(evt);
            }
        });

        roomTypeButtonGroup.add(roomRadioButton);
        roomRadioButton.setSelected(true);
        roomRadioButton.setText("Room");

        roomTypeButtonGroup.add(suiteRadioButton);
        suiteRadioButton.setText("Suite");

        roomTypeButtonGroup.add(deluxeRadioButton);
        deluxeRadioButton.setText("Deluxe");

        cancelBookButton.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        cancelBookButton.setText("Cancel");
        cancelBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBookButtonActionPerformed(evt);
            }
        });

        unbookButton.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        unbookButton.setText("Unbook");
        unbookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unbookButtonActionPerformed(evt);
            }
        });

        bookButton.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        bookButton.setText("Book");
        bookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookButtonActionPerformed(evt);
            }
        });

        bookHotelNameComboBox.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        bookHotelNameComboBox.setForeground(java.awt.Color.gray);
        bookHotelNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hotel Name" }));
        bookHotelNameComboBox.setToolTipText("Hotel Name");
        bookHotelNameComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bookHotelNameComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout bookPaneLayout = new javax.swing.GroupLayout(bookPane);
        bookPane.setLayout(bookPaneLayout);
        bookPaneLayout.setHorizontalGroup(
            bookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookPaneLayout.createSequentialGroup()
                        .addComponent(bookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unbookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bookGuestNameField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bookHotelNameComboBox, 0, 445, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(bookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomRadioButton)
                    .addComponent(suiteRadioButton)
                    .addComponent(deluxeRadioButton))
                .addGap(0, 15, Short.MAX_VALUE))
        );
        bookPaneLayout.setVerticalGroup(
            bookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookPaneLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(bookHotelNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bookGuestNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unbookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(bookPaneLayout.createSequentialGroup()
                        .addComponent(roomRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(suiteRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(deluxeRadioButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cashierTabbedPane.addTab("Book", bookPane);

        serviceNameField.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        serviceNameField.setForeground(java.awt.Color.gray);
        serviceNameField.setText("Service Description");
        serviceNameField.setToolTipText("Service Description");
        serviceNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                serviceNameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                serviceNameFieldFocusLost(evt);
            }
        });

        costField.setEditable(false);
        costField.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        costField.setForeground(java.awt.Color.gray);
        costField.setText("Cost in ₹");
        costField.setToolTipText("Cost in ₹");
        costField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                costFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                costFieldFocusLost(evt);
            }
        });
        costField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                costFieldKeyTyped(evt);
            }
        });

        cancelServeButton.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        cancelServeButton.setText("Cancel");
        cancelServeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelServeButtonActionPerformed(evt);
            }
        });

        recordServeButton.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        recordServeButton.setText("Record");
        recordServeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordServeButtonActionPerformed(evt);
            }
        });

        serveHotelNameComboBox.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        serveHotelNameComboBox.setForeground(java.awt.Color.gray);
        serveHotelNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hotel Name" }));
        serveHotelNameComboBox.setToolTipText("Hotel Name");
        serveHotelNameComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                serveHotelNameComboBoxItemStateChanged(evt);
            }
        });

        serveGuestNameField.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        serveGuestNameField.setForeground(java.awt.Color.gray);
        serveGuestNameField.setText("Guest Name");
        serveGuestNameField.setToolTipText("Guest Name");
        serveGuestNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                serveGuestNameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                serveGuestNameFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout servePaneLayout = new javax.swing.GroupLayout(servePane);
        servePane.setLayout(servePaneLayout);
        servePaneLayout.setHorizontalGroup(
            servePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, servePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(servePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serveHotelNameComboBox, 0, 280, Short.MAX_VALUE)
                    .addComponent(serviceNameField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(servePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(servePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(costField)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, servePaneLayout.createSequentialGroup()
                            .addComponent(recordServeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                            .addComponent(cancelServeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(serveGuestNameField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        servePaneLayout.setVerticalGroup(
            servePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(servePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(servePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serveHotelNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serveGuestNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(servePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(costField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serviceNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(servePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelServeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(recordServeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        cashierTabbedPane.addTab("Serve", servePane);

        javax.swing.GroupLayout billPaneLayout = new javax.swing.GroupLayout(billPane);
        billPane.setLayout(billPaneLayout);
        billPaneLayout.setHorizontalGroup(
            billPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 548, Short.MAX_VALUE)
        );
        billPaneLayout.setVerticalGroup(
            billPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 159, Short.MAX_VALUE)
        );

        cashierTabbedPane.addTab("Bill", billPane);

        logoutButton.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(activityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cashierTabbedPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(activityLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cashierTabbedPane))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bookGuestNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bookGuestNameFieldFocusGained
        if (bookGuestNameField.getForeground() == Color.GRAY) {
            bookGuestNameField.setText("");
            bookGuestNameField.setForeground(Color.BLACK);
            bookGuestNameField.setCaretPosition(0);
        }
    }//GEN-LAST:event_bookGuestNameFieldFocusGained

    private void bookGuestNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bookGuestNameFieldFocusLost
        if ("".equals(bookGuestNameField.getText()) || bookGuestNameField.getForeground() == Color.GRAY) {
            bookGuestNameField.setForeground(Color.GRAY);
            bookGuestNameField.setText("Guest Name");
        }
    }//GEN-LAST:event_bookGuestNameFieldFocusLost

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        HMSFrame.self.renderLogin(username);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void cancelBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBookButtonActionPerformed
        errorLabel.setText("");
        errorLabel.setForeground(Color.RED);
        bookHotelNameComboBox.setSelectedIndex(0);
        bookHotelNameComboBox.setForeground(Color.GRAY);
        bookGuestNameField.setText("Guest Name");
        bookGuestNameField.setForeground(Color.GRAY);
    }//GEN-LAST:event_cancelBookButtonActionPerformed

    private void unbookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unbookButtonActionPerformed
        String hotel, guest;

        hotel = bookHotelNameComboBox.getSelectedItem().toString();
        guest = bookGuestNameField.getText();

        if (bookHotelNameComboBox.getSelectedIndex() == 0 || bookHotelNameComboBox.getSelectedIndex() == -1
                || bookGuestNameField.getForeground() == Color.GRAY || "".equals(guest)) {
            errorLabel.setText("Provide Hotel and Guest Names");
            errorLabel.setForeground(Color.RED);
            return;
        }

        try (
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/hotelmgmt", "hotelmgmt", "hotelmgmt");
            PreparedStatement ps = con.prepareStatement("delete from guests where name=? and hotel=?")
        ) {
            ps.setString(1, guest);
            ps.setString(2, hotel);
            ps.execute();

            errorLabel.setText("Room Unbooked");
            errorLabel.setForeground(Color.BLUE);
        }
        catch(SQLException e) {
            errorLabel.setText("Database Connection Failed");
            errorLabel.setForeground(Color.ORANGE);
        }
        finally {
            bookHotelNameComboBox.setSelectedIndex(0);
            bookHotelNameComboBox.setForeground(Color.GRAY);
            bookGuestNameField.setText("Guest Name");
            bookGuestNameField.setForeground(Color.GRAY);
            roomRadioButton.setSelected(true);
        }
    }//GEN-LAST:event_unbookButtonActionPerformed

    private void bookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookButtonActionPerformed
        String hotel, guest, roomtype;
        ResultSet maxRoomsRS, countGuestsRS;

        hotel = bookHotelNameComboBox.getSelectedItem().toString();
        guest = bookGuestNameField.getText();

        roomtype = "Room";
        if (suiteRadioButton.isSelected()) roomtype = "Suite";
        else if (deluxeRadioButton.isSelected()) roomtype = "Deluxe";

        if (bookHotelNameComboBox.getSelectedIndex() == 0 || bookHotelNameComboBox.getSelectedIndex() == -1
                || bookGuestNameField.getForeground() == Color.GRAY || "".equals(guest)) {
            errorLabel.setText("Provide Hotel and Guest Names");
            errorLabel.setForeground(Color.RED);
            return;
        }

        try (
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/hotelmgmt", "hotelmgmt", "hotelmgmt");
            PreparedStatement maxRoomsPS = con.prepareStatement("select rooms from hotels where hotel=?");
            PreparedStatement countGuestsPS = con.prepareStatement("select count(*) from guests where hotel=?");
            PreparedStatement insertPS = con.prepareStatement("insert into guests (name, hotel, roomtype) values(?, ?, ?) on duplicate key update roomtype=?")
        ) {
            maxRoomsPS.setString(1, hotel);
            maxRoomsRS = maxRoomsPS.executeQuery();

            countGuestsPS.setString(1, hotel);
            countGuestsRS = countGuestsPS.executeQuery();

            maxRoomsRS.next();
            countGuestsRS.next();
            if (countGuestsRS.getInt(1) < maxRoomsRS.getInt(1)) {
                insertPS.setString(1, guest);
                insertPS.setString(2, hotel);
                insertPS.setString(3, roomtype);
                insertPS.setString(4, roomtype);
                insertPS.execute();

                errorLabel.setText("Room Booked");
                errorLabel.setForeground(Color.BLUE);
            }
            else {
                errorLabel.setText("Insufficient Rooms");
                errorLabel.setForeground(Color.RED);
            }
        }
        catch(SQLException e) {
            errorLabel.setText("Database Connection Failed");
            errorLabel.setForeground(Color.ORANGE);
        }
        finally {
            bookHotelNameComboBox.setSelectedIndex(0);
            bookHotelNameComboBox.setForeground(Color.GRAY);
            bookGuestNameField.setText("Guest Name");
            bookGuestNameField.setForeground(Color.GRAY);
            roomRadioButton.setSelected(true);
        }
    }//GEN-LAST:event_bookButtonActionPerformed

    private void bookHotelNameComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bookHotelNameComboBoxItemStateChanged
        SwingUtilities.invokeLater(() -> {
            if (bookHotelNameComboBox.getSelectedIndex() == 0 || bookHotelNameComboBox.getSelectedIndex() == -1) {
                bookHotelNameComboBox.setSelectedIndex(0);
                bookHotelNameComboBox.setForeground(Color.GRAY);
            }
            else bookHotelNameComboBox.setForeground(Color.BLACK);
        });
    }//GEN-LAST:event_bookHotelNameComboBoxItemStateChanged

    private void serviceNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serviceNameFieldFocusGained
        if (serviceNameField.getForeground() == Color.GRAY) {
            serviceNameField.setText("");
            serviceNameField.setForeground(Color.BLACK);
            serviceNameField.setCaretPosition(0);
        }
    }//GEN-LAST:event_serviceNameFieldFocusGained

    private void serviceNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serviceNameFieldFocusLost
        if ("".equals(serviceNameField.getText()) || serviceNameField.getForeground() == Color.GRAY) {
            serviceNameField.setForeground(Color.GRAY);
            serviceNameField.setText("Service Description");
        }
    }//GEN-LAST:event_serviceNameFieldFocusLost

    private void costFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_costFieldFocusGained
        if (costField.getForeground() == Color.GRAY) {
            costField.setText("");
            costField.setForeground(Color.BLACK);
            costField.setCaretPosition(0);
        }
    }//GEN-LAST:event_costFieldFocusGained

    private void costFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_costFieldFocusLost
        if ("".equals(costField.getText()) || costField.getForeground() == Color.GRAY) {
            costField.setForeground(Color.GRAY);
            costField.setText("Cost in ₹");
        }
    }//GEN-LAST:event_costFieldFocusLost

    private void costFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costFieldKeyTyped
        char c;
        String orig;

        c = evt.getKeyChar();
        orig = costField.getText();

        if (Character.isDigit(c)) costField.setText(orig + c);
        else if (c == '\b' && orig.length() != 0) costField.setText(orig.substring(0, orig.length() - 1));
    }//GEN-LAST:event_costFieldKeyTyped

    private void cancelServeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelServeButtonActionPerformed
        errorLabel.setText("");
        errorLabel.setForeground(Color.RED);
        serveHotelNameComboBox.setSelectedIndex(0);
        serveHotelNameComboBox.setForeground(Color.GRAY);
        serveGuestNameField.setText("Guest Name");
        serveGuestNameField.setForeground(Color.GRAY);
        serviceNameField.setText("Service Description");
        serviceNameField.setForeground(Color.GRAY);
        costField.setText("Cost in ₹");
        costField.setForeground(Color.GRAY);
    }//GEN-LAST:event_cancelServeButtonActionPerformed

    private void recordServeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordServeButtonActionPerformed
        int cost;
        String hotel, guest, service;

        hotel = serveHotelNameComboBox.getSelectedItem().toString();
        guest = serveGuestNameField.getText();
        service = serviceNameField.getText();

        if (serveHotelNameComboBox.getSelectedIndex() == 0 || serveHotelNameComboBox.getSelectedIndex() == -1
                || serveGuestNameField.getForeground() == Color.GRAY || "".equals(guest)
                || serviceNameField.getForeground() == Color.GRAY || "".equals(service)
                || costField.getForeground() == Color.GRAY || "".equals(costField.getText())) {
            errorLabel.setText("Provide Hotel, Guest, Service, Cost");
            errorLabel.setForeground(Color.RED);
            return;
        }

        cost = Integer.parseInt(costField.getText());

        try (
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/hotelmgmt", "hotelmgmt", "hotelmgmt");
            PreparedStatement ps = con.prepareStatement("insert into services (name, hotel, service, cost) values(?, ?, ?, ?)")
        ) {
            ps.setString(1, guest);
            ps.setString(2, hotel);
            ps.setString(3, service);
            ps.setInt(4, cost);

            if (ps.executeUpdate() != 0) {
                errorLabel.setText("Service Recorded");
                errorLabel.setForeground(Color.BLUE);
            }
            else {
                errorLabel.setText("Guest not Found");
                errorLabel.setForeground(Color.BLUE);
            }
        }
        catch(SQLException e) {
            errorLabel.setText("Database Connection Failed");
            errorLabel.setForeground(Color.ORANGE);
        }
        finally {
            serveHotelNameComboBox.setSelectedIndex(0);
            serveHotelNameComboBox.setForeground(Color.GRAY);
            serveGuestNameField.setText("Guest Name");
            serveGuestNameField.setForeground(Color.GRAY);
            serviceNameField.setText("Service Description");
            serviceNameField.setForeground(Color.GRAY);
            costField.setText("Cost in ₹");
            costField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_recordServeButtonActionPerformed

    private void serveHotelNameComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_serveHotelNameComboBoxItemStateChanged
        SwingUtilities.invokeLater(() -> {
            if (bookHotelNameComboBox.getSelectedIndex() == 0 || bookHotelNameComboBox.getSelectedIndex() == -1) {
                bookHotelNameComboBox.setSelectedIndex(0);
                bookHotelNameComboBox.setForeground(Color.GRAY);
            }
            else bookHotelNameComboBox.setForeground(Color.BLACK);
        });
    }//GEN-LAST:event_serveHotelNameComboBoxItemStateChanged

    private void serveGuestNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serveGuestNameFieldFocusGained
        if (serveGuestNameField.getForeground() == Color.GRAY) {
            serveGuestNameField.setText("");
            serveGuestNameField.setForeground(Color.BLACK);
            serveGuestNameField.setCaretPosition(0);
        }
    }//GEN-LAST:event_serveGuestNameFieldFocusGained

    private void serveGuestNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serveGuestNameFieldFocusLost
        if ("".equals(serveGuestNameField.getText()) || serveGuestNameField.getForeground() == Color.GRAY) {
            serveGuestNameField.setForeground(Color.GRAY);
            serveGuestNameField.setText("Guest Name");
        }
    }//GEN-LAST:event_serveGuestNameFieldFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel activityLabel;
    private javax.swing.JPanel billPane;
    private javax.swing.JButton bookButton;
    private javax.swing.JTextField bookGuestNameField;
    private javax.swing.JComboBox bookHotelNameComboBox;
    private javax.swing.JPanel bookPane;
    private javax.swing.JButton cancelBookButton;
    private javax.swing.JButton cancelServeButton;
    private javax.swing.JTabbedPane cashierTabbedPane;
    private javax.swing.JTextField costField;
    private javax.swing.JRadioButton deluxeRadioButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton recordServeButton;
    private javax.swing.JRadioButton roomRadioButton;
    private javax.swing.ButtonGroup roomTypeButtonGroup;
    private javax.swing.JTextField serveGuestNameField;
    private javax.swing.JComboBox serveHotelNameComboBox;
    private javax.swing.JPanel servePane;
    private javax.swing.JTextField serviceNameField;
    private javax.swing.JRadioButton suiteRadioButton;
    private javax.swing.JButton unbookButton;
    // End of variables declaration//GEN-END:variables
}
/* end of UserPanel.java */
