/* LoginPanel.java */
/* Login Component for the Hotel Management System
 *
 * Copyright 2016 Ankit Pati <ankitpati@gmail.com>
 *
 * This  software is  free software;  you can redistribute it and/or  modify  it
 * under the terms of the  GNU Lesser General Public License as published by the
 * Free Software Foundation;  either  version 3  of the  License,  or  (at  your
 * option) any later version.
 *
 * This software is distributed in the hope that it will be useful, but  WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 *
 * You  should  have received a copy of the GNU Lesser  General  Public  License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

package hotelmgmt;

import javax.swing.*;

public class HMSFrame extends javax.swing.JFrame {
    final static long serialVersionUID = 0l;
    JPanel currentPanel = new LoginPanel();
    static HMSFrame self;

    public HMSFrame() {
        initComponents();
        add(currentPanel);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HMSFrameMenuBar = new javax.swing.JMenuBar();
        themeMenu = new javax.swing.JMenu();
        nimbusMenuItem = new javax.swing.JMenuItem();
        metalMenuItem = new javax.swing.JMenuItem();
        motifMenuItem = new javax.swing.JMenuItem();
        gtkMenuItem = new javax.swing.JMenuItem();
        windowsMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hotel Management System");
        setAlwaysOnTop(true);
        setResizable(false);
        getContentPane().setLayout(new java.awt.FlowLayout());

        themeMenu.setText("Theme");

        nimbusMenuItem.setText("Nimbus");
        nimbusMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themeActionPerformedHandler(evt);
            }
        });
        themeMenu.add(nimbusMenuItem);

        metalMenuItem.setText("Metal");
        metalMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themeActionPerformedHandler(evt);
            }
        });
        themeMenu.add(metalMenuItem);

        motifMenuItem.setText("CDE/Motif");
        motifMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themeActionPerformedHandler(evt);
            }
        });
        themeMenu.add(motifMenuItem);

        gtkMenuItem.setText("GTK+");
        gtkMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themeActionPerformedHandler(evt);
            }
        });
        themeMenu.add(gtkMenuItem);

        windowsMenuItem.setText("Windows");
        windowsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themeActionPerformedHandler(evt);
            }
        });
        themeMenu.add(windowsMenuItem);

        HMSFrameMenuBar.add(themeMenu);

        setJMenuBar(HMSFrameMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void themeActionPerformedHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themeActionPerformedHandler
        SwingUtilities.invokeLater(() -> {
            try {
                for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                    if (evt.getActionCommand().equals(info.getName())) {
                        UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
                SwingUtilities.updateComponentTreeUI(this);
                pack();
            }
            catch (Exception ex) {
                System.err.println("Cannot set "+evt.getActionCommand()+" theme.");
            }
        });
    }//GEN-LAST:event_themeActionPerformedHandler

    public final void renderLogin(String username) {
        remove(currentPanel);
        add(currentPanel = new LoginPanel(username));
        pack();
    }
    
    public final void renderAdmin(String username) {
        remove(currentPanel);
        add(currentPanel = new AdminPanel(username));
        pack();
    }
    
    public final void renderUser(String username) {
        remove(currentPanel);
        add(currentPanel = new UserPanel(username));
        pack();
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HMSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HMSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HMSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HMSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        self = new HMSFrame();
        self.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar HMSFrameMenuBar;
    private javax.swing.JMenuItem gtkMenuItem;
    private javax.swing.JMenuItem metalMenuItem;
    private javax.swing.JMenuItem motifMenuItem;
    private javax.swing.JMenuItem nimbusMenuItem;
    private javax.swing.JMenu themeMenu;
    private javax.swing.JMenuItem windowsMenuItem;
    // End of variables declaration//GEN-END:variables
}
/* end of HMSFrame.java */
